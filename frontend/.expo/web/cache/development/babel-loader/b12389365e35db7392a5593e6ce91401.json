{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vincentgomes/esport-application/frontend/screens/SignIn.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-elements';\nexport default function RegisterBrand(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      signInEmail = _useState2[0],\n      setSignInEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signInPassword = _useState4[0],\n      setSignInPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userExists = _useState6[0],\n      setUserExists = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      redirect = _useState8[0],\n      setRedirect = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      roleState = _useState10[0],\n      setRoleState = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      listErrorsSignIn = _useState12[0],\n      setErrorsSignIn = _useState12[1];\n\n  var handleSubmitSignIn = function handleSubmitSignIn(navigation) {\n    var data, body;\n    return _regeneratorRuntime.async(function handleSubmitSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.19:3000/sign-in', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: \"emailFromFront=\" + signInEmail + \"&passwordFromFront=\" + signInPassword\n            }));\n\n          case 2:\n            data = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 5:\n            body = _context.sent;\n            console.log(body);\n\n            if (body.result == true) {\n              props.addToken(body.token);\n              setUserExists(true);\n              setRoleState(body.user.role);\n            } else {\n              setErrorsSignIn(body.error);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (roleState == 'brand') {\n    console.log(\"BRAND\");\n    return navigation.navigate('RegisterBrand');\n  } else if (roleState == 'influenceur') {\n    return navigation.navigate('RegisterBrand');\n  }\n\n  var tabErrorsSignin = listErrorsSignIn.map(function (error, i) {\n    return React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, error);\n  });\n  return React.createElement(View, {\n    style: styles.regform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Sign-in with you account\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignInEmail(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignInPassword(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      handleSubmitSignIn();\n    },\n    secureTextEntry: true,\n    style: styles.btntext,\n    title: \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  regform: {\n    alignSelf: 'stretch'\n  },\n  header: {\n    fontSize: 24,\n    color: '#fff',\n    paddingBottom: 10,\n    marginBottom: 40,\n    borderBottomColor: '#199187',\n    borderBottomWidth: 1\n  },\n  textinput: {\n    alignSelf: 'stretch',\n    height: 40,\n    marginBottom: 30,\n    color: '#fff',\n    borderBottomColor: '#f8f8f8',\n    borderBottomWidth: 1\n  },\n  button: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#59cbbd',\n    marginTop: 30\n  },\n  btntext: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/vincentgomes/esport-application/frontend/screens/SignIn.js"],"names":["React","useState","Button","RegisterBrand","navigation","signInEmail","setSignInEmail","signInPassword","setSignInPassword","userExists","setUserExists","redirect","setRedirect","roleState","setRoleState","listErrorsSignIn","setErrorsSignIn","handleSubmitSignIn","fetch","method","headers","body","data","json","console","log","result","props","addToken","token","user","role","error","navigate","tabErrorsSignin","map","i","styles","regform","header","val","textinput","button","btntext","StyleSheet","create","alignSelf","fontSize","color","paddingBottom","marginBottom","borderBottomColor","borderBottomWidth","height","alignItems","padding","backgroundColor","marginTop","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\nimport {Button} from 'react-native-elements'\n\n\nexport default function RegisterBrand({navigation}) {\n\n    const [signInEmail, setSignInEmail] = useState('')\n    const [signInPassword, setSignInPassword] = useState('')\n    const [userExists, setUserExists] = useState(false)\n    const [redirect, setRedirect] = useState(false)\n    const [roleState, setRoleState]= useState('')\n    const [listErrorsSignIn, setErrorsSignIn] = useState([])\n\n\n    var handleSubmitSignIn = async (navigation) => {\n \n        const data = await fetch('http://192.168.0.19:3000/sign-in', {\n          method: 'POST',\n          headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n          body: `emailFromFront=${signInEmail}&passwordFromFront=${signInPassword}`\n        })\n    \n        const body = await data.json()\n        console.log(body)\n      \n       \n    \n        if(body.result == true){\n          props.addToken(body.token)\n          setUserExists(true)\n          setRoleState(body.user.role)\n        }  else {\n          setErrorsSignIn(body.error)\n        }\n      }\n    \n      if(roleState == 'brand'){\n          console.log(\"BRAND\")\n        return  navigation.navigate('RegisterBrand')\n      } else if (roleState == 'influenceur'){\n        return navigation.navigate('RegisterBrand')\n      }\n    \n      var tabErrorsSignin = listErrorsSignIn.map((error,i) => {\n        return(<p>{error}</p>)\n      }) \n    \n    return (\n\n        <View style={styles.regform}>\n\n            <Text style={styles.header}>Sign-in with you account</Text>\n            <TextInput onChangeText={(val) => setSignInEmail(val)} style={styles.textinput} placeholder=\"Email\" placeholderTextColor=\"#fff\"/>\n\n            <TextInput onChangeText={(val) => setSignInPassword(val)} style={styles.textinput} placeholder=\"Password\" placeholderTextColor=\"#fff\"/>\n           \n            <TouchableOpacity style={styles.button}>\n                <Button onPress={() => {handleSubmitSignIn()}} secureTextEntry={true} style={styles.btntext} title=\"Sign In\"/>\n            </TouchableOpacity>\n\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    regform: {\n        alignSelf: 'stretch',\n    },\n    header: {\n        fontSize: 24,\n        color: '#fff',\n        paddingBottom: 10,\n        marginBottom: 40,\n        borderBottomColor: '#199187',\n        borderBottomWidth: 1\n    },\n    textinput: {\n        alignSelf: 'stretch',\n        height: 40,\n        marginBottom: 30,\n        color: '#fff',\n        borderBottomColor: '#f8f8f8',\n        borderBottomWidth: 1\n    },\n    button: {\n        alignSelf: 'stretch',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#59cbbd',\n        marginTop: 30,\n    },\n    btntext: {\n        color: '#fff',\n        fontWeight: 'bold'\n    }\n});"]},"metadata":{},"sourceType":"module"}