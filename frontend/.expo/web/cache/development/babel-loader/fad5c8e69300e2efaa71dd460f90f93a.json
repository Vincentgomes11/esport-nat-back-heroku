{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vincentgomes/esport-application/frontend/screens/RegisterBrand.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-elements';\nimport { connect } from 'react-redux';\n\nfunction RegisterBrand(props) {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      signUpFirstName = _useState2[0],\n      setSignUpFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signUpLastName = _useState4[0],\n      setSignUpLastName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      signUpEmail = _useState6[0],\n      setSignUpEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      signUpPassword = _useState8[0],\n      setSignUpPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      signUpCompany = _useState10[0],\n      setSignUpCompagny = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      signUpPhone = _useState12[0],\n      setSignUpPhone = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      redirect = _useState14[0],\n      setRedirect = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userExists = _useState16[0],\n      setUserExists = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      listErrorsSignup = _useState18[0],\n      setErrorsSignup = _useState18[1];\n\n  var handleSubmitSignupBrand = function handleSubmitSignupBrand() {\n    var data, body;\n    return _regeneratorRuntime.async(function handleSubmitSignupBrand$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"d√©but handle submit\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.19:3000/sign-up/brand', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: \"firstNameFromFront=\" + signUpFirstName + \"&lastNameFromFront=\" + signUpLastName + \"&emailFromFront=\" + signUpEmail + \"&passwordFromFront=\" + signUpPassword + \"&phoneFromFront=\" + signUpPhone + \"&companyFromFront=\" + signUpCompany\n            }));\n\n          case 3:\n            data = _context.sent;\n            console.log(data.body + \"Data.body\");\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 7:\n            body = _context.sent;\n            console.log(\"sign up brand\", body);\n\n            if (body.result == true) {\n              props.addToken(body.token);\n              setUserExists(true);\n              setRedirect(true);\n            } else {\n              setErrorsSignup(body.error);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var tabErrorsSignup = listErrorsSignup.map(function (error, i) {\n    return React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    }, error);\n  });\n  return React.createElement(View, {\n    style: styles.regform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpCompagny(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Company\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpFirstName(val);\n    },\n    style: styles.textinput,\n    placeholder: \"First Name\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpLastName(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Last Name\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpEmail(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpPassword(val);\n    },\n    style: styles.textinput,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignUpPhone(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Phone\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      handleSubmitSignupBrand();\n    },\n    style: styles.btntext,\n    title: \"Sign up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), redirect ? navigation.navigate('CreateCampaign') : null);\n}\n\nvar styles = StyleSheet.create({\n  regform: {\n    alignSelf: 'stretch'\n  },\n  header: {\n    fontSize: 24,\n    color: '#fff',\n    paddingBottom: 10,\n    marginBottom: 40,\n    borderBottomColor: '#199187',\n    borderBottomWidth: 1\n  },\n  textinput: {\n    alignSelf: 'stretch',\n    height: 40,\n    marginBottom: 30,\n    color: '#fff',\n    borderBottomColor: '#f8f8f8',\n    borderBottomWidth: 1\n  },\n  button: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#59cbbd',\n    marginTop: 10\n  },\n  btntext: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToken: function addToken(token) {\n      dispatch({\n        type: 'addToken',\n        token: token\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(RegisterBrand);","map":{"version":3,"sources":["/Users/vincentgomes/esport-application/frontend/screens/RegisterBrand.js"],"names":["React","useState","Button","connect","RegisterBrand","props","signUpFirstName","setSignUpFirstName","signUpLastName","setSignUpLastName","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","signUpCompany","setSignUpCompagny","signUpPhone","setSignUpPhone","redirect","setRedirect","userExists","setUserExists","listErrorsSignup","setErrorsSignup","handleSubmitSignupBrand","console","log","fetch","method","headers","body","data","json","result","addToken","token","error","tabErrorsSignup","map","i","styles","regform","val","textinput","button","btntext","navigation","navigate","StyleSheet","create","alignSelf","header","fontSize","color","paddingBottom","marginBottom","borderBottomColor","borderBottomWidth","height","alignItems","padding","backgroundColor","marginTop","fontWeight","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\nimport {Button} from 'react-native-elements'\nimport {connect} from 'react-redux';\n\n\n function RegisterBrand(props) {\n    const [signUpFirstName, setSignUpFirstName] = useState('')\n    const [signUpLastName, setSignUpLastName] = useState('')\n    const [signUpEmail, setSignUpEmail] = useState('')\n    const [signUpPassword, setSignUpPassword] = useState('')\n    const [signUpCompany, setSignUpCompagny] = useState('')\n    const [signUpPhone, setSignUpPhone] = useState('')\n\n    const [redirect, setRedirect] = useState(false)\n    const [userExists, setUserExists] = useState(false)\n    const [listErrorsSignup, setErrorsSignup] = useState([])\n\n\n\n    var handleSubmitSignupBrand = async () => {\n\n        console.log(\"d√©but handle submit\")\n\n        const data = await fetch('http://192.168.0.19:3000/sign-up/brand', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `firstNameFromFront=${signUpFirstName}&lastNameFromFront=${signUpLastName}&emailFromFront=${signUpEmail}&passwordFromFront=${signUpPassword}&phoneFromFront=${signUpPhone}&companyFromFront=${signUpCompany}`\n        })\n        console.log(data.body + \"Data.body\")\n\n        const body = await data.json()\n        console.log(\"sign up brand\", body)\n        if (body.result == true) {\n            props.addToken(body.token)\n            setUserExists(true)\n            setRedirect(true)\n          } else {\n            setErrorsSignup(body.error)\n          }\n        }\n        var tabErrorsSignup = listErrorsSignup.map((error,i) => {\n          return(<p>{error}</p>)\n        })\n    \n    \n    return (\n\n        <View style={styles.regform}>\n\n            {/* <Text style={styles.header}>Sign-up as a Company</Text> */}\n            <TextInput onChangeText={(val) => setSignUpCompagny(val)} style={styles.textinput} placeholder=\"Company\" placeholderTextColor=\"#fff\"/>\n\n            <TextInput onChangeText={(val) => setSignUpFirstName(val)} style={styles.textinput} placeholder=\"First Name\" placeholderTextColor=\"#fff\"/>\n            <TextInput onChangeText={(val) => setSignUpLastName(val)} style={styles.textinput} placeholder=\"Last Name\" placeholderTextColor=\"#fff\" />\n            <TextInput onChangeText={(val) => setSignUpEmail(val)} style={styles.textinput} placeholder=\"Email\" placeholderTextColor=\"#fff\" />\n            <TextInput onChangeText={(val) => setSignUpPassword(val)} style={styles.textinput} secureTextEntry={true} placeholder=\"Password\" placeholderTextColor=\"#fff\" />\n            <TextInput onChangeText={(val) => setSignUpPhone(val)} style={styles.textinput} placeholder=\"Phone\" placeholderTextColor=\"#fff\" />\n\n            <TouchableOpacity style={styles.button}>\n                <Button onPress={() => {handleSubmitSignupBrand()}} style={styles.btntext} title=\"Sign up\"/>\n            </TouchableOpacity>\n\n            {redirect ? navigation.navigate('CreateCampaign') : null}\n\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    regform: {\n        alignSelf: 'stretch',\n    },\n    header: {\n        fontSize: 24,\n        color: '#fff',\n        paddingBottom: 10,\n        marginBottom: 40,\n        borderBottomColor: '#199187',\n        borderBottomWidth: 1\n    },\n    textinput: {\n        alignSelf: 'stretch',\n        height: 40,\n        marginBottom: 30,\n        color: '#fff',\n        borderBottomColor: '#f8f8f8',\n        borderBottomWidth: 1\n    },\n    button: {\n        alignSelf: 'stretch',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#59cbbd',\n        marginTop: 10,\n    },\n    btntext: {\n        color: '#fff',\n        fontWeight: 'bold'\n    }\n});\n\nfunction mapDispatchToProps(dispatch){\n    return {\n      addToken: function(token){\n        dispatch({type: 'addToken', token: token})\n      }\n    }\n  }\n  export default connect(\n    null,\n    mapDispatchToProps\n  )(RegisterBrand)"]},"metadata":{},"sourceType":"module"}