{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vincentgomes/esport-application/frontend/screens/SignIn.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-elements';\nexport default function RegisterBrand(navigation) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      signInEmail = _useState2[0],\n      setSignInEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signInPassword = _useState4[0],\n      setSignInPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userExists = _useState6[0],\n      setUserExists = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      redirect = _useState8[0],\n      setRedirect = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      roleState = _useState10[0],\n      setRoleState = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      listErrorsSignIn = _useState12[0],\n      setErrorsSignIn = _useState12[1];\n\n  return React.createElement(View, {\n    style: styles.regform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Sign-in with you account\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignInEmail(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(val) {\n      return setSignInPassword(val);\n    },\n    style: styles.textinput,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      handleSubmitSignIn();\n    },\n    secureTextEntry: true,\n    style: styles.btntext,\n    title: \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  regform: {\n    alignSelf: 'stretch'\n  },\n  header: {\n    fontSize: 24,\n    color: '#fff',\n    paddingBottom: 10,\n    marginBottom: 40,\n    borderBottomColor: '#199187',\n    borderBottomWidth: 1\n  },\n  textinput: {\n    alignSelf: 'stretch',\n    height: 40,\n    marginBottom: 30,\n    color: '#fff',\n    borderBottomColor: '#f8f8f8',\n    borderBottomWidth: 1\n  },\n  button: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#59cbbd',\n    marginTop: 30\n  },\n  btntext: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/vincentgomes/esport-application/frontend/screens/SignIn.js"],"names":["React","useState","Button","RegisterBrand","navigation","signInEmail","setSignInEmail","signInPassword","setSignInPassword","userExists","setUserExists","redirect","setRedirect","roleState","setRoleState","listErrorsSignIn","setErrorsSignIn","styles","regform","header","val","textinput","button","handleSubmitSignIn","btntext","StyleSheet","create","alignSelf","fontSize","color","paddingBottom","marginBottom","borderBottomColor","borderBottomWidth","height","alignItems","padding","backgroundColor","marginTop","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\nimport {Button} from 'react-native-elements'\n\n\nexport default function RegisterBrand(navigation) {\n\n    const [signInEmail, setSignInEmail] = useState('')\n    const [signInPassword, setSignInPassword] = useState('')\n    const [userExists, setUserExists] = useState(false)\n    const [redirect, setRedirect] = useState(false)\n    const [roleState, setRoleState]= useState('')\n    const [listErrorsSignIn, setErrorsSignIn] = useState([])\n\n\n    // var handleSubmitSignIn = async () => {\n \n    //     const data = await fetch('http://192.168.0.19:3000/sign-in', {\n    //       method: 'POST',\n    //       headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n    //       body: `emailFromFront=${signInEmail}&passwordFromFront=${signInPassword}`\n    //     })\n    \n    //     const body = await data.json()\n    //     console.log(body)\n      \n       \n    \n    //     if(body.result == true){\n    //       props.addToken(body.token)\n    //       setUserExists(true)\n    //       setRoleState(body.user.role)\n    //     }  else {\n    //       setErrorsSignIn(body.error)\n    //     }\n    //   }\n    \n    //   if(roleState == 'brand'){\n    //     return <Redirect to='/choiceinfluencer' />\n    //   } else if (roleState == 'influenceur'){\n    //     return <Redirect to='/select-campaign' />\n    //   }\n    \n    //   var tabErrorsSignin = listErrorsSignIn.map((error,i) => {\n    //     return(<p>{error}</p>)\n    //   }) \n    \n    return (\n\n        <View style={styles.regform}>\n\n            <Text style={styles.header}>Sign-in with you account</Text>\n            <TextInput onChangeText={(val) => setSignInEmail(val)} style={styles.textinput} placeholder=\"Email\" placeholderTextColor=\"#fff\"/>\n\n            <TextInput onChangeText={(val) => setSignInPassword(val)} style={styles.textinput} placeholder=\"Password\" placeholderTextColor=\"#fff\"/>\n           \n            <TouchableOpacity style={styles.button}>\n                <Button onPress={() => {handleSubmitSignIn()}} secureTextEntry={true} style={styles.btntext} title=\"Sign In\"/>\n            </TouchableOpacity>\n\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    regform: {\n        alignSelf: 'stretch',\n    },\n    header: {\n        fontSize: 24,\n        color: '#fff',\n        paddingBottom: 10,\n        marginBottom: 40,\n        borderBottomColor: '#199187',\n        borderBottomWidth: 1\n    },\n    textinput: {\n        alignSelf: 'stretch',\n        height: 40,\n        marginBottom: 30,\n        color: '#fff',\n        borderBottomColor: '#f8f8f8',\n        borderBottomWidth: 1\n    },\n    button: {\n        alignSelf: 'stretch',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#59cbbd',\n        marginTop: 30,\n    },\n    btntext: {\n        color: '#fff',\n        fontWeight: 'bold'\n    }\n});"]},"metadata":{},"sourceType":"module"}